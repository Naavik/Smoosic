import { TextFormatter } from '../common/textformatter';
import { parseMidi } from '../common/midi-parser';
import { SuiApplication } from './application';
import { SuiEventHandler } from './eventHandler';
import { SuiExceptionHandler } from '../ui/exceptions';
import { Qwerty } from '../ui/qwerty';
import { SuiPiano } from '../render/sui/piano';
import { SuiDom } from './dom';
import { SuiHelp } from '../ui/help';
import { CollapseRibbonControl, ExtendedCollapseParent } from '../ui/buttons/collapsable';
import { DisplaySettings } from '../ui/buttons/display';
import { SmoTranslationEditor } from '../ui/i18n/translationEditor';
import { SmoConfiguration } from './configuration';
import { RibbonButtons } from '../ui/buttons/ribbon';
import { simpleRibbonLayout } from '../ui/ribbonLayout/default/tabletRibbon';
import { ModalEventHandler } from './common';
import { SuiDialogBase, createAndDisplayDialog } from '../ui/dialogs/dialog';
import { SuiComponentAdapter, SuiDialogAdapterBase } from '../ui/dialogs/adapter';
import { SuiGraceNoteAdapter, SuiGraceNoteDialog, SuiGraceNoteButtonsComponent } from '../ui/dialogs/gracenote';
import { SuiModifierDialogFactory } from '../ui/dialogs/factory';
import { SuiTransposeScoreDialog, SuiTransposeScoreAdapter } from '../ui/dialogs/transposeScore';
import { SuiMeasureDialog } from '../ui/dialogs/measureFormat';
import { SuiInsertMeasures } from '../ui/dialogs/addMeasure';
import { SuiInstrumentDialog } from '../ui/dialogs/instrument';
import { SuiTimeSignatureDialog } from '../ui/dialogs/timeSignature';
import { SuiTempoDialog } from '../ui/dialogs/tempo';
import { SuiNoteHeadAdapter, SuiNoteHeadDialog, SuiNoteHeadButtonComponent, SuiStemButtonComponent } from '../ui/dialogs/noteHead';
import { SuiEndingsAdapter, SuiEndingsDialog, SuiEndBarButtonComponent, SuiStartBarButtonComponent, SuiRepeatSymbolButtonComponent } from '../ui/dialogs/endings';
import { SuiScoreIdentificationDialog } from '../ui/dialogs/scoreId';
import { SuiScorePreferencesDialog } from '../ui/dialogs/preferences';
import { SuiPageLayoutDialog } from '../ui/dialogs/pageLayout';
import { SuiTextBracketDialog } from '../ui/dialogs/textBracket';
import { SuiScoreFontDialog } from '../ui/dialogs/fonts';
import { SuiGlobalLayoutDialog } from '../ui/dialogs/globalLayout';
import { SuiScoreViewDialog } from '../ui/dialogs/scoreView';
import { SuiLibraryDialog } from '../ui/dialogs/library';
import { SuiChordChangeDialog } from '../ui/dialogs/chordChange';
import { SuiLyricDialog } from '../ui/dialogs/lyric';
import { SuiTextBlockDialog, helpModal } from '../ui/dialogs/textBlock';
import { SuiDynamicModifierDialog } from '../ui/dialogs/dynamics';
import { SuiSlurAttributesDialog } from '../ui/dialogs/slur';
import { SuiPedalMarkingDialog } from '../ui/dialogs/pedalMarking';
import { SuiTieAttributesDialog } from '../ui/dialogs/tie';
import { SuiVoltaAttributeDialog } from '../ui/dialogs/volta';
import { SuiHairpinAttributesDialog } from '../ui/dialogs/hairpin';
import { SuiStaffGroupDialog } from '../ui/dialogs/staffGroup';
import { SuiOrnamentDialog, SuiOrnamentButtonComponent } from '../ui/dialogs/ornament';
import { SuiArticulationDialog, SuiArticulationButtonComponent, SuiArticulationAdapter } from '../ui/dialogs/articulation';
import { SuiMicrotoneAdapter, SuiMicrotoneButtonComponent, SuiMicrotoneDialog } from '../ui/dialogs/microtones';
import { SuiArpeggioDialog } from '../ui/dialogs/arpeggio';
import { SuiClefChangeDialog } from '../ui/dialogs/clefChange';
import { SuiPartInfoDialog } from '../ui/dialogs/partInfo';
import { SuiLoadMxmlDialog, SuiLoadFileDialog, SuiPrintFileDialog, SuiSaveFileDialog, SuiSaveXmlDialog, SuiSaveMidiDialog, SuiSaveVexDialog } from '../ui/dialogs/fileDialogs';
import { SuiTextInputComponent, SuiTextInputComposite, SuiReadOnlyTextComponent } from '../ui/dialogs/components/textInput';
import { SuiDropdownComponent, SuiDropdownComposite } from '../ui/dialogs/components/dropdown';
import { SuiButtonComposite, SuiButtonComponent } from '../ui/dialogs/components/button';
import { SuiButtonArrayComponent, SuiButtonArrayMSComponent } from '../ui/dialogs/components/buttonArray';
import { SuiToggleComponent, SuiToggleComposite } from '../ui/dialogs/components/toggle';
import { SuiFileDownloadComponent } from '../ui/dialogs/components/fileDownload';
import { SuiRockerComponent, SuiRockerComposite } from '../ui/dialogs/components/rocker';
import { SuiFontComponent } from '../ui/dialogs/components/fontComponent';
import { SuiTextBlockComponent } from '../ui/dialogs/components/textInPlace';
import { SuiTreeComponent } from '../ui/dialogs/components/tree';
import { SuiPitchArrayComponent, SuiPitchArrayComponentTab, SuiPitchComponent, SuiPitchComposite } from '../ui/dialogs/components/pitch';
import { SuiLyricComponent, SuiChordComponent, SuiNoteTextComponent } from '../ui/dialogs/components/noteText';
import { SuiDragText } from '../ui/dialogs/components/dragText';
import { SuiTextInPlace } from '../ui/dialogs/components/textInPlace';
import { CheckboxDropdownComponent } from '../ui/dialogs/components/checkdrop';
import { TieMappingComponent } from '../ui/dialogs/components/tie';
import { StaffAddRemoveComponent, StaffCheckComponent } from '../ui/dialogs/components/staffComponents';
import { SuiKeySignatureDialog, SuiKeySignatureAdapter } from '../ui/dialogs/keySignature';
import { TextCheckComponent } from '../ui/dialogs/components/textCheck';
import { SuiMenuManager } from '../ui/menus/manager';
import { SuiMenuBase } from '../ui/menus/menu';
import { SuiScoreMenu } from '../ui/menus/score';
import { SuiTextMenu } from '../ui/menus/text';
import { SuiPartMenu } from '../ui/menus/parts';
import { SuiVoiceMenu } from '../ui/menus/voices';
import { SuiBeamMenu } from '../ui/menus/beams';
import { SuiPartSelectionMenu } from '../ui/menus/partSelection';
import { SuiDynamicsMenu } from '../ui/menus/dynamics';
import { SuiTimeSignatureMenu } from '../ui/menus/timeSignature';
import { SuiKeySignatureMenu } from '../ui/menus/keySignature';
import { SuiStaffModifierMenu } from '../ui/menus/staffModifier';
import { SuiFileMenu } from '../ui/menus/file';
import { SuiLanguageMenu } from '../ui/menus/language';
import { SmoLanguage, SmoTranslator } from '../ui/i18n/language';
import { SuiMeasureMenu } from '../ui/menus/measure';
import { SuiNoteMenu } from '../ui/menus/note';
import { SuiXhrLoader } from '../ui/fileio/xhrLoader';
import { PromiseHelpers } from '../common/promiseHelpers';
import { SuiScoreView } from '../render/sui/scoreView';
import { SuiScoreViewOperations } from '../render/sui/scoreViewOperations';
import { SuiScoreRender } from '../render/sui/scoreRender';
import { layoutDebug } from '../render/sui/layoutDebug';
import { SuiMapper } from '../render/sui/mapper';
import { SuiScroller } from '../render/sui/scroller';
import { SvgHelpers } from '../render/sui/svgHelpers';
import { SuiAudioPlayer } from '../render/audio/player';
import { SuiOscillator, SuiSampler, SuiReverb } from '../render/audio/oscillator';
import { SuiSampleMedia } from '../render/audio/samples';
import { IsPitchLetter } from '../smo/data/common';
import { SmoScore, isEngravingFont } from '../smo/data/score';
import { UndoBuffer } from '../smo/xform/undo';
import { SmoNote } from '../smo/data/note';
import { SmoStaffHairpin, StaffModifierBase, SmoInstrument, SmoSlur, SmoTie, SmoStaffTextBracket, SmoTabStave, SmoPedalMarking } from '../smo/data/staffModifiers';
import { SmoMeasure } from '../smo/data/measure';
import { SmoMusic } from '../smo/data/music';
import { SmoAudioPitch } from '../smo/data/music';
import { SmoSelection, SmoSelector } from '../smo/xform/selections';
import { SmoBeamer } from '../smo/xform/beamers';
import { SmoOrnament, SmoArticulation, SmoDynamicText, SmoGraceNote, SmoMicrotone, SmoLyric, SmoArpeggio, SmoClefChange } from '../smo/data/noteModifiers';
import { SmoSystemStaff } from '../smo/data/systemStaff';
import { SmoSystemGroup, SmoAudioPlayerSettings, SmoScorePreferences } from '../smo/data/scoreModifiers';
import { SmoTextGroup } from '../smo/data/scoreText';
import { SmoOperation } from '../smo/xform/operations';
import { SmoRehearsalMark, SmoMeasureFormat, SmoBarline, SmoRepeatSymbol, SmoVolta, SmoMeasureText, SmoTempoText, TimeSignature } from '../smo/data/measureModifiers';
import { SmoToXml } from '../smo/mxml/smoToXml';
import { MidiToSmo } from '../smo/midi/midiToSmo';
import { SmoToMidi } from '../smo/midi/smoToMidi';
import { XmlToSmo } from '../smo/mxml/xmlToSmo';
import { SmoToVex } from '../render/vex/toVex';
import { buildDom, addFileLink, InputTrapper, draggable, closeDialogPromise, getDomContainer, createTopDomContainer } from '../common/htmlHelpers';
import { renderVexTests } from './generateVexTests';
import { SuiDurationAdapter, SuiDurationButtonComponent, SuiDurationDialog } from '../ui/dialogs/durations';
import { SuiPitchAdapter, SuiPitchDialog, SuiLetterButtonComponent, SuiIntervalButtonComponent, SuiTransposeButtonComponent } from '../ui/dialogs/pitch';
export * from './application';
export * from './common';
export * from './configuration';
export * from './dynamicInit';
export * from './dom';
export * from './eventHandler';
export * from './exports';
export * from '../common/midi-parser';
export * from './generateVexTests';
export * from './keyCommands';
export * from '../common/htmlHelpers';
export * from '../common/promiseHelpers';
export * from '../common/textformatter';
export * from '../common/vex';
export * from '../render/audio/musicCursor';
export * from '../render/audio/oscillator';
export * from '../render/audio/player';
export * from '../render/audio/samples';
export * from '../render/sui/configuration';
export * from '../render/sui/formatter';
export * from '../render/sui/layoutDebug';
export * from '../render/sui/mapper';
export * from '../render/sui/piano';
export * from '../render/sui/renderState';
export * from '../render/sui/scoreRender';
export * from '../render/sui/scoreView';
export * from '../render/sui/scoreViewOperations';
export * from '../render/sui/scroller';
export * from '../render/sui/svgHelpers';
export * from '../render/sui/svgPageMap';
export * from '../render/sui/textEdit';
export * from '../render/sui/textRender';
export * from '../render/sui/tracker';
export * from '../render/vex/glyphDimensions';
export * from '../render/vex/smoAdapter';
export * from '../render/vex/toVex';
export * from '../render/vex/vxMeasure';
export * from '../render/vex/vxNote';
export * from '../render/vex/vxSystem';
export * from '../smo/data/common';
export * from '../smo/data/measure';
export * from '../smo/data/measureModifiers';
export * from '../smo/data/music';
export * from '../smo/data/note';
export * from '../smo/data/noteModifiers';
export * from '../smo/data/partInfo';
export * from '../smo/data/score';
export * from '../smo/data/scoreModifiers';
export * from '../smo/data/scoreText';
export * from '../smo/data/staffModifiers';
export * from '../smo/data/systemStaff';
export * from '../smo/data/tuplet';
export * from '../smo/midi/midiToSmo';
export * from '../smo/midi/smoToMidi';
export * from '../smo/mxml/smoToXml';
export * from '../smo/mxml/xmlHelpers';
export * from '../smo/mxml/xmlState';
export * from '../smo/mxml/xmlToSmo';
export * from '../smo/xform/audioTrack';
export * from '../smo/xform/beamers';
export * from '../smo/xform/copypaste';
export * from '../smo/xform/operations';
export * from '../smo/xform/selections';
export * from '../smo/xform/tickDuration';
export * from '../smo/xform/tickMap';
export * from '../smo/xform/undo';
export * from '../ui/buttons/button';
export * from '../ui/buttons/collapsable';
export * from '../ui/buttons/display';
export * from '../ui/buttons/ribbon';
export * from '../ui/common';
export * from '../ui/configuration';
export * from '../ui/dialogs/adapter';
export * from '../ui/dialogs/addMeasure';
export * from '../ui/dialogs/arpeggio';
export * from '../ui/dialogs/articulation';
export * from '../ui/dialogs/audioSettings';
export * from '../ui/dialogs/chordChange';
export * from '../ui/dialogs/clefChange';
export * from '../ui/dialogs/components/baseComponent';
export * from '../ui/dialogs/components/button';
export * from '../ui/dialogs/components/buttonArray';
export * from '../ui/dialogs/components/checkdrop';
export * from '../ui/dialogs/components/dragText';
export * from '../ui/dialogs/components/dropdown';
export * from '../ui/dialogs/components/fileDownload';
export * from '../ui/dialogs/components/fontComponent';
export * from '../ui/dialogs/components/noteText';
export * from '../ui/dialogs/components/pitch';
export * from '../ui/dialogs/components/rocker';
export * from '../ui/dialogs/components/staffComponents';
export * from '../ui/dialogs/components/textCheck';
export * from '../ui/dialogs/components/textInPlace';
export * from '../ui/dialogs/components/textInput';
export * from '../ui/dialogs/components/tie';
export * from '../ui/dialogs/components/toggle';
export * from '../ui/dialogs/components/tree';
export * from '../ui/dialogs/dialog';
export * from '../ui/dialogs/durations';
export * from '../ui/dialogs/dynamics';
export * from '../ui/dialogs/endings';
export * from '../ui/dialogs/factory';
export * from '../ui/dialogs/fileDialogs';
export * from '../ui/dialogs/fonts';
export * from '../ui/dialogs/globalLayout';
export * from '../ui/dialogs/gracenote';
export * from '../ui/dialogs/hairpin';
export * from '../ui/dialogs/instrument';
export * from '../ui/dialogs/keySignature';
export * from '../ui/dialogs/library';
export * from '../ui/dialogs/lyric';
export * from '../ui/dialogs/measureFormat';
export * from '../ui/dialogs/microtones';
export * from '../ui/dialogs/newPart';
export * from '../ui/dialogs/noteHead';
export * from '../ui/dialogs/ornament';
export * from '../ui/dialogs/pageLayout';
export * from '../ui/dialogs/partInfo';
export * from '../ui/dialogs/pedalMarking';
export * from '../ui/dialogs/pitch';
export * from '../ui/dialogs/preferences';
export * from '../ui/dialogs/scoreId';
export * from '../ui/dialogs/scoreView';
export * from '../ui/dialogs/slur';
export * from '../ui/dialogs/staffGroup';
export * from '../ui/dialogs/tabNote';
export * from '../ui/dialogs/tabStave';
export * from '../ui/dialogs/tempo';
export * from '../ui/dialogs/textBlock';
export * from '../ui/dialogs/textBracket';
export * from '../ui/dialogs/tie';
export * from '../ui/dialogs/timeSignature';
export * from '../ui/dialogs/transposeScore';
export * from '../ui/dialogs/volta';
export * from '../ui/eventSource';
export * from '../ui/exceptions';
export * from '../ui/fileio/fileInput';
export * from '../ui/fileio/library';
export * from '../ui/fileio/xhrLoader';
export * from '../ui/help';
export * from '../ui/i18n/language';
export * from '../ui/i18n/translationEditor';
export * from '../ui/keyBindings/default/editorKeys';
export * from '../ui/keyBindings/default/trackerKeys';
export * from '../ui/menus/beams';
export * from '../ui/menus/dynamics';
export * from '../ui/menus/file';
export * from '../ui/menus/keySignature';
export * from '../ui/menus/language';
export * from '../ui/menus/manager';
export * from '../ui/menus/measure';
export * from '../ui/menus/menu';
export * from '../ui/menus/note';
export * from '../ui/menus/parts';
export * from '../ui/menus/partSelection';
export * from '../ui/menus/score';
export * from '../ui/menus/staffModifier';
export * from '../ui/menus/text';
export * from '../ui/menus/timeSignature';
export * from '../ui/menus/voices';
export * from '../ui/qwerty';
export * from '../ui/ribbonLayout/default/defaultRibbon';
export * from '../ui/ribbonLayout/default/tabletRibbon';
export declare const Smo: {
    SmoConfiguration: typeof SmoConfiguration;
    SuiApplication: typeof SuiApplication;
    dynamicCtorInit: () => void;
    parseMidi: typeof parseMidi;
    SuiDom: typeof SuiDom;
    SuiEventHandler: typeof SuiEventHandler;
    SuiExceptionHandler: typeof SuiExceptionHandler;
    Qwerty: typeof Qwerty;
    SuiHelp: typeof SuiHelp;
    SmoTranslationEditor: typeof SmoTranslationEditor;
    ModalEventHandler: typeof ModalEventHandler;
    simpleRibbonLayout: typeof simpleRibbonLayout;
    RibbonButtons: typeof RibbonButtons;
    DisplaySettings: typeof DisplaySettings;
    ExtendedCollapseParent: typeof ExtendedCollapseParent;
    CollapseRibbonControl: typeof CollapseRibbonControl;
    SuiMenuManager: typeof SuiMenuManager;
    SuiMenuBase: typeof SuiMenuBase;
    SuiMenuCustomizer: (fcn: import("./exports").customizeMenuOptionsFcn, ctor: string) => void;
    SuiScoreMenu: typeof SuiScoreMenu;
    SuiFileMenu: typeof SuiFileMenu;
    SuiDynamicsMenu: typeof SuiDynamicsMenu;
    SuiTimeSignatureMenu: typeof SuiTimeSignatureMenu;
    SuiKeySignatureMenu: typeof SuiKeySignatureMenu;
    SuiStaffModifierMenu: typeof SuiStaffModifierMenu;
    SuiLanguageMenu: typeof SuiLanguageMenu;
    SuiMeasureMenu: typeof SuiMeasureMenu;
    SuiNoteMenu: typeof SuiNoteMenu;
    SmoLanguage: typeof SmoLanguage;
    SmoTranslator: typeof SmoTranslator;
    SuiPartMenu: typeof SuiPartMenu;
    SuiPartSelectionMenu: typeof SuiPartSelectionMenu;
    SuiTextMenu: typeof SuiTextMenu;
    SuiVoiceMenu: typeof SuiVoiceMenu;
    SuiBeamMenu: typeof SuiBeamMenu;
    SuiGraceNoteAdapter: typeof SuiGraceNoteAdapter;
    SuiGraceNoteDialog: typeof SuiGraceNoteDialog;
    SuiGraceNoteButtonsComponent: typeof SuiGraceNoteButtonsComponent;
    SuiDurationAdapter: typeof SuiDurationAdapter;
    SuiDurationDialog: typeof SuiDurationDialog;
    SuiDurationButtonComponent: typeof SuiDurationButtonComponent;
    SuiComponentAdapter: typeof SuiComponentAdapter;
    SuiDialogAdapterBase: typeof SuiDialogAdapterBase;
    SuiTempoDialog: typeof SuiTempoDialog;
    SuiInstrumentDialog: typeof SuiInstrumentDialog;
    SuiModifierDialogFactory: typeof SuiModifierDialogFactory;
    SuiLibraryDialog: typeof SuiLibraryDialog;
    SuiTextBracketDialog: typeof SuiTextBracketDialog;
    SuiKeySignatureDialog: typeof SuiKeySignatureDialog;
    SuiKeySignatureAdapter: typeof SuiKeySignatureAdapter;
    SuiScoreViewDialog: typeof SuiScoreViewDialog;
    SuiGlobalLayoutDialog: typeof SuiGlobalLayoutDialog;
    SuiScoreIdentificationDialog: typeof SuiScoreIdentificationDialog;
    SuiTransposeScoreAdapter: typeof SuiTransposeScoreAdapter;
    SuiTransposeScoreDialog: typeof SuiTransposeScoreDialog;
    SuiScoreFontDialog: typeof SuiScoreFontDialog;
    SuiPageLayoutDialog: typeof SuiPageLayoutDialog;
    SuiMeasureDialog: typeof SuiMeasureDialog;
    SuiInsertMeasures: typeof SuiInsertMeasures;
    SuiTimeSignatureDialog: typeof SuiTimeSignatureDialog;
    SuiTextBlockDialog: typeof SuiTextBlockDialog;
    SuiLyricDialog: typeof SuiLyricDialog;
    SuiChordChangeDialog: typeof SuiChordChangeDialog;
    SuiSlurAttributesDialog: typeof SuiSlurAttributesDialog;
    SuiPedalMarkingDialog: typeof SuiPedalMarkingDialog;
    SuiTieAttributesDialog: typeof SuiTieAttributesDialog;
    SuiVoltaAttributeDialog: typeof SuiVoltaAttributeDialog;
    SuiHairpinAttributesDialog: typeof SuiHairpinAttributesDialog;
    SuiStaffGroupDialog: typeof SuiStaffGroupDialog;
    helpModal: typeof helpModal;
    SuiLoadFileDialog: typeof SuiLoadFileDialog;
    SuiLoadMxmlDialog: typeof SuiLoadMxmlDialog;
    SuiScorePreferencesDialog: typeof SuiScorePreferencesDialog;
    SuiPartInfoDialog: typeof SuiPartInfoDialog;
    SuiOrnamentDialog: typeof SuiOrnamentDialog;
    SuiOrnamentButtonComponent: typeof SuiOrnamentButtonComponent;
    SuiArticulationDialog: typeof SuiArticulationDialog;
    SuiArticulationButtonComponent: typeof SuiArticulationButtonComponent;
    SuiArticulationAdapter: typeof SuiArticulationAdapter;
    SuiMicrotoneAdapter: typeof SuiMicrotoneAdapter;
    SuiMicrotoneButtonComponent: typeof SuiMicrotoneButtonComponent;
    SuiMicrotoneDialog: typeof SuiMicrotoneDialog;
    SuiNoteHeadAdapter: typeof SuiNoteHeadAdapter;
    SuiNoteHeadDialog: typeof SuiNoteHeadDialog;
    SuiStemButtonComponent: typeof SuiStemButtonComponent;
    SuiNoteHeadButtonComponent: typeof SuiNoteHeadButtonComponent;
    SuiEndingsAdapter: typeof SuiEndingsAdapter;
    SuiEndingsDialog: typeof SuiEndingsDialog;
    SuiEndBarButtonComponent: typeof SuiEndBarButtonComponent;
    SuiStartBarButtonComponent: typeof SuiStartBarButtonComponent;
    SuiRepeatSymbolButtonComponent: typeof SuiRepeatSymbolButtonComponent;
    SuiPrintFileDialog: typeof SuiPrintFileDialog;
    SuiSaveFileDialog: typeof SuiSaveFileDialog;
    SuiSaveXmlDialog: typeof SuiSaveXmlDialog;
    SuiSaveVexDialog: typeof SuiSaveVexDialog;
    SuiSaveMidiDialog: typeof SuiSaveMidiDialog;
    SuiDialogBase: typeof SuiDialogBase;
    createAndDisplayDialog: typeof createAndDisplayDialog;
    SuiPitchDialog: typeof SuiPitchDialog;
    SuiPitchAdapter: typeof SuiPitchAdapter;
    SuiIntervalButtonComponent: typeof SuiIntervalButtonComponent;
    SuiLetterButtonComponent: typeof SuiLetterButtonComponent;
    SuiTransposeButtonComponent: typeof SuiTransposeButtonComponent;
    SuiTreeComponent: typeof SuiTreeComponent;
    SuiDropdownComponent: typeof SuiDropdownComponent;
    SuiRockerComponent: typeof SuiRockerComponent;
    SuiFileDownloadComponent: typeof SuiFileDownloadComponent;
    SuiButtonArrayComponent: typeof SuiButtonArrayComponent;
    SuiButtonArrayMSComponent: typeof SuiButtonArrayMSComponent;
    SuiToggleComponent: typeof SuiToggleComponent;
    SuiButtonComponent: typeof SuiButtonComponent;
    SuiDropdownComposite: typeof SuiDropdownComposite;
    SuiToggleComposite: typeof SuiToggleComposite;
    SuiButtonComposite: typeof SuiButtonComposite;
    SuiRockerComposite: typeof SuiRockerComposite;
    SuiTextInputComposite: typeof SuiTextInputComposite;
    SuiFontComponent: typeof SuiFontComponent;
    SuiTextInPlace: typeof SuiTextInPlace;
    SuiLyricComponent: typeof SuiLyricComponent;
    SuiChordComponent: typeof SuiChordComponent;
    SuiDragText: typeof SuiDragText;
    SuiNoteTextComponent: typeof SuiNoteTextComponent;
    SuiTextBlockComponent: typeof SuiTextBlockComponent;
    SuiTextInputComponent: typeof SuiTextInputComponent;
    SuiReadOnlyTextComponent: typeof SuiReadOnlyTextComponent;
    SuiDynamicModifierDialog: typeof SuiDynamicModifierDialog;
    CheckboxDropdownComponent: typeof CheckboxDropdownComponent;
    TieMappingComponent: typeof TieMappingComponent;
    StaffAddRemoveComponent: typeof StaffAddRemoveComponent;
    StaffCheckComponent: typeof StaffCheckComponent;
    TextCheckComponent: typeof TextCheckComponent;
    SuiArpeggioDialog: typeof SuiArpeggioDialog;
    SuiClefChangeDialog: typeof SuiClefChangeDialog;
    SuiPitchArrayComponent: typeof SuiPitchArrayComponent;
    SuiPitchArrayComponentTab: typeof SuiPitchArrayComponentTab;
    SuiPitchComponent: typeof SuiPitchComponent;
    SuiPitchComposite: typeof SuiPitchComposite;
    SuiXhrLoader: typeof SuiXhrLoader;
    PromiseHelpers: typeof PromiseHelpers;
    SuiPiano: typeof SuiPiano;
    layoutDebug: typeof layoutDebug;
    SuiScoreView: typeof SuiScoreView;
    SuiScroller: typeof SuiScroller;
    SvgHelpers: typeof SvgHelpers;
    SuiMapper: typeof SuiMapper;
    SuiScoreRender: typeof SuiScoreRender;
    SuiScoreViewOperations: typeof SuiScoreViewOperations;
    TextFormatter: typeof TextFormatter;
    VexFlow: typeof import("vexflow_smoosic").Flow;
    SuiAudioPlayer: typeof SuiAudioPlayer;
    SuiOscillator: typeof SuiOscillator;
    SuiSampleMedia: typeof SuiSampleMedia;
    SuiSampler: typeof SuiSampler;
    SuiReverb: typeof SuiReverb;
    SmoScore: typeof SmoScore;
    SmoScorePreferences: typeof SmoScorePreferences;
    scoreModifierDynamicCtorInit: () => void;
    engravingFontTypes: import("./exports").engravingFontType[];
    isEngravingFont: typeof isEngravingFont;
    XmlToSmo: typeof XmlToSmo;
    SmoToXml: typeof SmoToXml;
    MidiToSmo: typeof MidiToSmo;
    SmoToMidi: typeof SmoToMidi;
    SmoMusic: typeof SmoMusic;
    SmoAudioPitch: typeof SmoAudioPitch;
    SmoMeasure: typeof SmoMeasure;
    SmoNamespace: {
        value: string;
    };
    SmoDynamicCtor: Record<string, import("./exports").dynamicCtor>;
    SmoSystemStaff: typeof SmoSystemStaff;
    SmoNote: typeof SmoNote;
    IsPitchLetter: typeof IsPitchLetter;
    SmoStaffHairpin: typeof SmoStaffHairpin;
    StaffModifierBase: typeof StaffModifierBase;
    SmoStaffTextBracket: typeof SmoStaffTextBracket;
    staffModifierDynamicCtorInit: () => void;
    SmoInstrument: typeof SmoInstrument;
    SmoSlur: typeof SmoSlur;
    SmoPedalMarking: typeof SmoPedalMarking;
    SmoTie: typeof SmoTie;
    SmoTabStave: typeof SmoTabStave;
    SmoSystemGroup: typeof SmoSystemGroup;
    SmoAudioPlayerSettings: typeof SmoAudioPlayerSettings;
    SmoTextGroup: typeof SmoTextGroup;
    SmoRehearsalMark: typeof SmoRehearsalMark;
    SmoMeasureFormat: typeof SmoMeasureFormat;
    SmoBarline: typeof SmoBarline;
    SmoRepeatSymbol: typeof SmoRepeatSymbol;
    SmoVolta: typeof SmoVolta;
    SmoMeasureText: typeof SmoMeasureText;
    SmoTempoText: typeof SmoTempoText;
    TimeSignature: typeof TimeSignature;
    measureModifierDynamicCtorInit: () => void;
    SmoOrnament: typeof SmoOrnament;
    noteModifierDynamicCtorInit: () => void;
    SmoArticulation: typeof SmoArticulation;
    SmoDynamicText: typeof SmoDynamicText;
    SmoGraceNote: typeof SmoGraceNote;
    SmoMicrotone: typeof SmoMicrotone;
    SmoLyric: typeof SmoLyric;
    SmoArpeggio: typeof SmoArpeggio;
    SmoClefChange: typeof SmoClefChange;
    SmoSelection: typeof SmoSelection;
    SmoSelector: typeof SmoSelector;
    UndoBuffer: typeof UndoBuffer;
    SmoToVex: typeof SmoToVex;
    SmoOperation: typeof SmoOperation;
    SmoBeamer: typeof SmoBeamer;
    cardKeysHtmlEn: string;
    cardNotesLetterHtmlEn: string;
    cardNotesChromaticHtmlEn: string;
    cardNotesChordsHtmlEn: string;
    cardNotesRestsHtmlEn: string;
    cardDurationNotesHtmlEn: string;
    cardDurationTupletsHtmlEn: string;
    cardSelectionsNotesHtmlEn: string;
    cardSelectionsModifiersHtmlEn: string;
    cardSelectionsNonSelectableHtmlEn: string;
    cardSelectionsSlashHtmlEn: string;
    cardBeamsAndStemsDirectionHtmlEn: string;
    cardBeamsAndStemsGroupingHtmlEn: string;
    cardMeasuresAddDeleteHtmlEn: string;
    cardVoicesCreateDeleteHtmlEn: string;
    cardPartAddDeleteHtmlEn: string;
    getClass: (jsonString: string) => any;
    buildDom: typeof buildDom;
    addFileLink: typeof addFileLink;
    InputTrapper: typeof InputTrapper;
    draggable: typeof draggable;
    closeDialogPromise: typeof closeDialogPromise;
    getDomContainer: typeof getDomContainer;
    createTopDomContainer: typeof createTopDomContainer;
    renderVexTests: typeof renderVexTests;
};
export default Smo;
//# sourceMappingURL=exports.d.ts.map